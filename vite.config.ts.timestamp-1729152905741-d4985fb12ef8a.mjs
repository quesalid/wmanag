// vite.config.ts
import { svelte } from "file:///C:/Users/pulic/source/repos/sicheo/wmanag/node_modules/@sveltejs/vite-plugin-svelte/src/index.js";
import "file:///C:/Users/pulic/source/repos/sicheo/wmanag/node_modules/vite/dist/node/index.js";
import path from "path";
import { fileURLToPath } from "url";

// postcss.config.js
import tailwind from "file:///C:/Users/pulic/source/repos/sicheo/wmanag/node_modules/tailwindcss/lib/index.js";

// tailwind.config.js
var tailwind_config_default = {
  plugins: [],
  theme: {
    extend: {
      inset: {
        "-1": "-1rem"
      }
    }
  },
  content: ["./src/**/*.{html,js,svelte,ts}"],
  variants: {
    extend: {}
  },
  darkmode: false
  // or 'media' or 'class'
};

// postcss.config.js
import autoprefixer from "file:///C:/Users/pulic/source/repos/sicheo/wmanag/node_modules/autoprefixer/lib/autoprefixer.js";
var postcss_config_default = {
  plugins: [tailwind(tailwind_config_default), autoprefixer]
};

// vite.config.ts
var __vite_injected_original_import_meta_url = "file:///C:/Users/pulic/source/repos/sicheo/wmanag/vite.config.ts";
var __dirname = path.dirname(fileURLToPath(__vite_injected_original_import_meta_url));
var config = {
  plugins: [svelte()],
  //optimizeDeps: { include: ["@carbon/charts", "svelte-pdf"], exclude: ['@carbon/telemetry'] },
  /*build: {
      lib: {
          // Could also be a dictionary or array of multiple entry points
          entry: path.resolve(__dirname, 'src/index.js'),
          name: 'WManag',
          // the proper extensions will be added
          fileName: 'wmanag',
      }
  },*/
  css: {
    postcss: postcss_config_default
  }
};
var vite_config_default = config;
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiLCAicG9zdGNzcy5jb25maWcuanMiLCAidGFpbHdpbmQuY29uZmlnLmpzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiQzpcXFxcVXNlcnNcXFxccHVsaWNcXFxcc291cmNlXFxcXHJlcG9zXFxcXHNpY2hlb1xcXFx3bWFuYWdcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIkM6XFxcXFVzZXJzXFxcXHB1bGljXFxcXHNvdXJjZVxcXFxyZXBvc1xcXFxzaWNoZW9cXFxcd21hbmFnXFxcXHZpdGUuY29uZmlnLnRzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ltcG9ydF9tZXRhX3VybCA9IFwiZmlsZTovLy9DOi9Vc2Vycy9wdWxpYy9zb3VyY2UvcmVwb3Mvc2ljaGVvL3dtYW5hZy92aXRlLmNvbmZpZy50c1wiOy8vaW1wb3J0IHsgZGVmaW5lQ29uZmlnIH0gZnJvbSAndml0ZSdcbmltcG9ydCB7IHN2ZWx0ZSB9IGZyb20gJ0BzdmVsdGVqcy92aXRlLXBsdWdpbi1zdmVsdGUnXG5pbXBvcnQgeyBVc2VyQ29uZmlnIH0gZnJvbSAndml0ZSdcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnXG5pbXBvcnQgeyBmaWxlVVJMVG9QYXRoIH0gZnJvbSAndXJsJztcbmltcG9ydCBwb3N0Y3NzIGZyb20gJy4vcG9zdGNzcy5jb25maWcuanMnO1xuXG4vLyBjb25maWd1cmUgdml0ZSB0byBwdWJsaXNoIHRoZSBzdmVsdGUgY29tcG9uZW50cyBhcyBhIGxpYnJhcnlcbi8vIGh0dHBzOi8vdml0ZWpzLmRldi9ndWlkZS9idWlsZC5odG1sI2xpYnJhcnktbW9kZVxuLy8gaHR0cHM6Ly92aXRlanMuZGV2L2NvbmZpZy8jbGlicmFyeVxuXG5cbi8qXG4vLyBodHRwczovL3ZpdGVqcy5kZXYvY29uZmlnL1xuZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29uZmlnKHtcbiAgICBwbHVnaW5zOiBbc3ZlbHRlKCldLFxufSkqL1xuXG5sZXQgX19kaXJuYW1lID0gcGF0aC5kaXJuYW1lKGZpbGVVUkxUb1BhdGgoaW1wb3J0Lm1ldGEudXJsKSk7XG5cbmNvbnN0IGNvbmZpZzogVXNlckNvbmZpZyA9IHtcblx0cGx1Z2luczogW3N2ZWx0ZSgpXSxcblx0Ly9vcHRpbWl6ZURlcHM6IHsgaW5jbHVkZTogW1wiQGNhcmJvbi9jaGFydHNcIiwgXCJzdmVsdGUtcGRmXCJdLCBleGNsdWRlOiBbJ0BjYXJib24vdGVsZW1ldHJ5J10gfSxcbiAgICAvKmJ1aWxkOiB7XG4gICAgICAgIGxpYjoge1xuICAgICAgICAgICAgLy8gQ291bGQgYWxzbyBiZSBhIGRpY3Rpb25hcnkgb3IgYXJyYXkgb2YgbXVsdGlwbGUgZW50cnkgcG9pbnRzXG4gICAgICAgICAgICBlbnRyeTogcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJ3NyYy9pbmRleC5qcycpLFxuICAgICAgICAgICAgbmFtZTogJ1dNYW5hZycsXG4gICAgICAgICAgICAvLyB0aGUgcHJvcGVyIGV4dGVuc2lvbnMgd2lsbCBiZSBhZGRlZFxuICAgICAgICAgICAgZmlsZU5hbWU6ICd3bWFuYWcnLFxuICAgICAgICB9XG4gICAgfSwqL1xuICAgIGNzczoge1xuICAgICAgICBwb3N0Y3NzXG4gICAgfSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbmZpZztcblxuIiwgImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCJDOlxcXFxVc2Vyc1xcXFxwdWxpY1xcXFxzb3VyY2VcXFxccmVwb3NcXFxcc2ljaGVvXFxcXHdtYW5hZ1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9maWxlbmFtZSA9IFwiQzpcXFxcVXNlcnNcXFxccHVsaWNcXFxcc291cmNlXFxcXHJlcG9zXFxcXHNpY2hlb1xcXFx3bWFuYWdcXFxccG9zdGNzcy5jb25maWcuanNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL0M6L1VzZXJzL3B1bGljL3NvdXJjZS9yZXBvcy9zaWNoZW8vd21hbmFnL3Bvc3Rjc3MuY29uZmlnLmpzXCI7aW1wb3J0IHRhaWx3aW5kIGZyb20gJ3RhaWx3aW5kY3NzJ1xuaW1wb3J0IHRhaWx3aW5kQ29uZmlnIGZyb20gJy4vdGFpbHdpbmQuY29uZmlnLmpzJ1xuaW1wb3J0IGF1dG9wcmVmaXhlciBmcm9tICdhdXRvcHJlZml4ZXInXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgcGx1Z2luczogW3RhaWx3aW5kKHRhaWx3aW5kQ29uZmlnKSwgYXV0b3ByZWZpeGVyXVxufVxuIiwgImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCJDOlxcXFxVc2Vyc1xcXFxwdWxpY1xcXFxzb3VyY2VcXFxccmVwb3NcXFxcc2ljaGVvXFxcXHdtYW5hZ1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9maWxlbmFtZSA9IFwiQzpcXFxcVXNlcnNcXFxccHVsaWNcXFxcc291cmNlXFxcXHJlcG9zXFxcXHNpY2hlb1xcXFx3bWFuYWdcXFxcdGFpbHdpbmQuY29uZmlnLmpzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ltcG9ydF9tZXRhX3VybCA9IFwiZmlsZTovLy9DOi9Vc2Vycy9wdWxpYy9zb3VyY2UvcmVwb3Mvc2ljaGVvL3dtYW5hZy90YWlsd2luZC5jb25maWcuanNcIjsvKiogQHR5cGUge2ltcG9ydCgndGFpbHdpbmRjc3MnKS5Db25maWd9ICovXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgcGx1Z2luczogW10sXG4gICAgdGhlbWU6IHtcbiAgICAgICAgZXh0ZW5kOiB7XG4gICAgICAgICAgICBpbnNldDoge1xuICAgICAgICAgICAgICctMSc6ICctMXJlbScsXG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgfSxcbiAgICBjb250ZW50OiBbJy4vc3JjLyoqLyoue2h0bWwsanMsc3ZlbHRlLHRzfSddLFxuICAgIHZhcmlhbnRzOiB7XG4gICAgICAgIGV4dGVuZDoge30sXG4gICAgfSxcbiAgICBkYXJrbW9kZTogZmFsc2UsIC8vIG9yICdtZWRpYScgb3IgJ2NsYXNzJ1xufVxuXG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQ0EsU0FBUyxjQUFjO0FBQ3ZCLE9BQTJCO0FBQzNCLE9BQU8sVUFBVTtBQUNqQixTQUFTLHFCQUFxQjs7O0FDSm1TLE9BQU8sY0FBYzs7O0FDQ3RWLElBQU8sMEJBQVE7QUFBQSxFQUNYLFNBQVMsQ0FBQztBQUFBLEVBQ1YsT0FBTztBQUFBLElBQ0gsUUFBUTtBQUFBLE1BQ0osT0FBTztBQUFBLFFBQ04sTUFBTTtBQUFBLE1BQ1A7QUFBQSxJQUNKO0FBQUEsRUFDSjtBQUFBLEVBQ0EsU0FBUyxDQUFDLGdDQUFnQztBQUFBLEVBQzFDLFVBQVU7QUFBQSxJQUNOLFFBQVEsQ0FBQztBQUFBLEVBQ2I7QUFBQSxFQUNBLFVBQVU7QUFBQTtBQUNkOzs7QURiQSxPQUFPLGtCQUFrQjtBQUN6QixJQUFPLHlCQUFRO0FBQUEsRUFDWCxTQUFTLENBQUMsU0FBUyx1QkFBYyxHQUFHLFlBQVk7QUFDcEQ7OztBREx1TSxJQUFNLDJDQUEyQztBQWtCeFAsSUFBSSxZQUFZLEtBQUssUUFBUSxjQUFjLHdDQUFlLENBQUM7QUFFM0QsSUFBTSxTQUFxQjtBQUFBLEVBQzFCLFNBQVMsQ0FBQyxPQUFPLENBQUM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBV2YsS0FBSztBQUFBLElBQ0Q7QUFBQSxFQUNKO0FBQ0o7QUFFQSxJQUFPLHNCQUFROyIsCiAgIm5hbWVzIjogW10KfQo=
